version: '3.3'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: condominium-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: condominium-manager
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - condominium-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend Application
  backend:
    build: .
    container_name: condominium-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/condominium-manager?authSource=admin
    ports:
      - "4000:4000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - condominium-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend Application (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: condominium-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:4000
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - condominium-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend Application (Development with Hot Reload)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: condominium-frontend-dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:4000
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - condominium-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Express (Optional - Web UI for MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: condominium-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - condominium-network

volumes:
  mongodb_data:
    driver: local

networks:
  condominium-network:
    driver: bridge 